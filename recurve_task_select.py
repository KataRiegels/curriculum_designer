

def recurse_task_select(mdp, policy, beta, epsilon, curriculum):
    
    
    
    pass




"""

1: (solved, X, œÄ0) = LEARN(M, œÄ, Œ≤)
2: if solved then
3: ENQUEUE(C, M)
4: return (œÄ0, C)
5: end if
6: Ms ‚Üê CREATESOURCETASKS(M, X)
7: P ‚Üê ‚àÖ
8: U ‚Üê ‚àÖ
9: for Ms ‚àà Ms do
10: (solvedMs
, XMs
, œÄMs
) = LEARN(Ms, œÄ, Œ≤)
11: if solvedMs
then
12: P ‚Üê P ‚à™ {(œÄMs
, Ms)}
13: else
14: U ‚Üê U ‚à™ {(Ms, XMs
)}
15: end if
16: end for
17: if |P| > 0 then
18: (œÄbest, Mbest,score) = GETBESTPOLICY(P, œÄ, X)
19: if score >  then
20: ENQUEUE(C, Mbest)
21: return (œÄbest, C)
22: end if
23: end if
24: SORTBYSAMPLERELEVANCE(U, X, )
25: for (Ms, XMs
) ‚àà U do
26: (œÄ
0
s, C) ‚Üê RECURSETASKSELECT(Ms, œÄ, Œ≤, , C)
27: if œÄ
0
s 6= null then
28: return RECURSETASKSELECT(M, œÄ0
s, Œ≤, , C)
29: end if
30: end for
31: return ( null, C)

"""











